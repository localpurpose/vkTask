definitions:
  models.Movie:
    properties:
      ID:
        type: integer
      date:
        type: string
      description:
        type: string
      name:
        type: string
      rating:
        type: integer
    type: object
host: localhost:3000
info:
  contact: {}
  description: VK TEST TASK - FILMOTEKA BACKEND REST API
  title: Filmoteka API
  version: "1.0"
paths:
  /movie:
    get:
      consumes:
      - application/json
      parameters:
      - description: Get movie by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      security:
      - ApiKeyAuth: []
      summary: Gets movie from request body by Name
      tags:
      - movies
  /movie/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      security:
      - ApiKeyAuth: []
      summary: Creates movie from request body
      tags:
      - movies
  /movie/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete Movie
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Updates movie from request body by url path id
      tags:
      - movies
  /movie/update/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Update Movie
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      security:
      - ApiKeyAuth: []
      tags:
      - movies
  /person:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Gets person from request URL name
      tags:
      - persons
  /person/create:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Creates person from request body
      tags:
      - persons
  /person/delete:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Deletes person from request URL id
      tags:
      - persons
  /person/update:
    patch:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Updates person from request URL id
      tags:
      - persons
  /persons:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Gets all persons
      tags:
      - persons
  /user/sign-in/:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Signing In user endpoint
      tags:
      - users
  /user/sign-up/:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Create user endpoint
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    type: basic
swagger: "2.0"
